version: '3.3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: hunt
    ports:
      - 5432:5432/tcp
  adminer:
    image: adminer
    restart: always
    ports:
      - 9090:8080/tcp
  backend:
    image: hunt:latest
    container_name: hunt_backend
    build: hunt
    env_file:
      - base.env
    ports:
      - 8000:8000/tcp
    depends_on:
      - db
      - queue
  frontend:
    image: hunt_frontend:latest
    container_name: hunt_frontend
    build: hunt_frontend
    env_file:
      - base.env
    ports:
      - 8001:8001/tcp
    depends_on:
      - backend
  worker:
    image: hunt:latest
    container_name: hunt_worker
    command: celery -A hunt worker --loglevel=info
    env_file:
      - base.env
    depends_on:
      - backend
      - queue
  flower:
    image: hunt:latest
    container_name: hunt_flower
    command: celery flower -A hunt
    env_file:
      - base.env
    depends_on:
      - worker
      - queue
    ports:
      - 5555:5555/tcp
  scheduler:
    image: hunt:latest
    container_name: hunt_scheduler
    command: celery -A hunt beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - base.env
    depends_on:
      - worker
      - queue
  queue:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 8080:15672/tcp
      - 5672:5672/tcp
  proxy:
    container_name: project_proxy
    build: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend

#    volumes:
#      - /etc/ssl:/etc/ssl
#      - /var/www:/var/www
